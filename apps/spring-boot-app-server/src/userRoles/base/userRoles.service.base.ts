/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserRoles as PrismaUserRoles } from "@prisma/client";

export class UserRolesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserRolesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userRoles.count(args);
  }

  async userRolesItems<T extends Prisma.UserRolesFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRolesFindManyArgs>
  ): Promise<PrismaUserRoles[]> {
    return this.prisma.userRoles.findMany<Prisma.UserRolesFindManyArgs>(args);
  }
  async userRoles<T extends Prisma.UserRolesFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRolesFindUniqueArgs>
  ): Promise<PrismaUserRoles | null> {
    return this.prisma.userRoles.findUnique(args);
  }
  async createUserRoles<T extends Prisma.UserRolesCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRolesCreateArgs>
  ): Promise<PrismaUserRoles> {
    return this.prisma.userRoles.create<T>(args);
  }
  async updateUserRoles<T extends Prisma.UserRolesUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRolesUpdateArgs>
  ): Promise<PrismaUserRoles> {
    return this.prisma.userRoles.update<T>(args);
  }
  async deleteUserRoles<T extends Prisma.UserRolesDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRolesDeleteArgs>
  ): Promise<PrismaUserRoles> {
    return this.prisma.userRoles.delete(args);
  }
}
